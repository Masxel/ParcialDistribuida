@page "/entranceindex"
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager NavigationManager

<div class="mt-3 card" style="width:55%; text-align:center; margin-left:10%">
    <div class="card-header">
        <span>
            <i class="oi oi-magnifying-glass" /> Consulta tickets
            <button class="btn btn-sm btn-primary float-end mx-2" @onclick=@(() => Search())><i class="oi oi-check" /> Realizar busqueda</button>
        </span>
    </div>
    <div class="card-body">
        <div class="row" style="text-align:center; display:inline-block">
            <input style="width: 320px;" class="form-control" id="txtTicket" type="number" placeholder="Ingrese el número del ticket" min="1" @bind-value="@TicketNumber" />
        </div>

    </div>
</div>
@if (boolshowcontent)
{
    <div class="mt-3 card" style="width:55%; text-align:center; margin-left:10%">
        <div class="card-header">
            <span>
                <i class="oi oi-account-login" /> Seleccione la localidad de ingreso
            </span>
        </div>
        <div class="card-body">
            <div style="margin-top:20px">
                <select class="form-select" @bind="@Entrada">
                    <option value="0">Norte</option>
                    <option value="1">Sur</option>
                    <option value="2">Este</option>
                    <option value="3">Oeste</option>
                </select>
            </div>
        </div>
    </div>

    <div class="mt-3 card" style="width:55%; text-align:center; margin-left:10%">
        <div class="card-header">
            <span>
                <i class="oi oi-calendar" /> Seleccione la fecha
            </span>
        </div>
        <div class="card-body">
            <div style="margin-top:20px">
                <input class="form-control" @bind-value="ticket!.UseDate" type="datetime">
            </div>
            <div>
                <button @onclick="@(() => Update())" class="btn btn-primary" style="margin-top:20px">Marcar boleta</button>
            </div>
        </div>
    </div>
}




@code {
    int TicketNumber { get; set; }

    bool boolshowcontent { get; set; } = false;

    int Entrada { get; set; }

    Ticket? ticket { get; set; } = new Ticket();

    private async Task Search()
    {

        var responseHTTP = await repository.Get<Ticket>($"api/entrances/{TicketNumber}");

        if (responseHTTP.Error)
        {
            if (responseHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                await sweetAlertService.FireAsync("Error", "Boleta no válida", SweetAlertIcon.Error);
                return;
            }

            var mensajeError = await responseHTTP.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            return;
        }

        ticket = responseHTTP.Response;

        if (ticket!.Used)
        {
            await sweetAlertService.FireAsync("Atención", $"La boleta ya fue usada el {ticket.UseDate} por la porteria {ticket.EntrancePlaceType.ToString()}", SweetAlertIcon.Info);
        }
        else
        {
            boolshowcontent = true;
        }




    }

    private async Task Update()
    {
        try
        {
            ticket!.Used = true;
            ticket.EntrancePlaceType = (Entrance)Entrada;

            var responseHttp = await repository.Put("/api/entrances/", ticket);
            if (responseHttp.Error)
            {
                var message = await responseHttp.GetErrorMessageAsync();
                await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
                return;
            }



            var toast = sweetAlertService.Mixin(new SweetAlertOptions
                {
                    Toast = true,
                    Position = SweetAlertPosition.TopEnd,
                    ShowConfirmButton = false,
                    Timer = 5000
                });
            await toast.FireAsync(icon: SweetAlertIcon.Success, message: "La boleta se registro exitosamente.");
            boolshowcontent = false;
            ticket = new Ticket();
            TicketNumber = 0;
        }
        catch (Exception ex)
        {

            throw;
        }
    }









}
